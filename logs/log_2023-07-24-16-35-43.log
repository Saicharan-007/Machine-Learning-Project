[2023-07-24 16:35:58,427]^;INFO^;183^;configuration.py^;get_training_pipeline_config()^;Training pipeline config: TrainingPipelineConfig(artifact_dir='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact')
[2023-07-24 16:35:58,427]^;INFO^;110^;pipeline.py^;run_pipeline()^;Pipeline Starting
[2023-07-24 16:35:58,429]^;INFO^;124^;pipeline.py^;run_pipeline()^;Pipeline experiment:Experiment(experiment_id='92c8feb3-7e3b-439c-9468-773bf1f9f739', initalization_timestamp='2023-07-24-16-35-43', artifact_time_stamp='2023-07-24-16-35-43', running_status=True, start_time=datetime.datetime(2023, 7, 24, 16, 35, 58, 429225), stop_time=None, execution_time=None, message='Pipeline has been started', experiment_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\experiment\\experiment.csv', accuracy=None, is_model_accepted=None)
[2023-07-24 16:35:58,446]^;INFO^;56^;configuration.py^;get_data_ingestion_config()^;Data Ingestion Config: DataIngestionConfig(dataset_download_url='https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz', tgz_download_dir='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_ingestion\\2023-07-24-16-35-43\\tgz_data', raw_data_dir='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_ingestion\\2023-07-24-16-35-43\\raw_data', ingested_train_dir='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_ingestion\\2023-07-24-16-35-43\\ingested_data\\train', ingested_test_dir='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_ingestion\\2023-07-24-16-35-43\\ingested_data\\test')
[2023-07-24 16:35:58,446]^;INFO^;14^;data_ingestion.py^;__init__()^;====================Data Ingestion log started.==================== 
[2023-07-24 16:35:58,446]^;INFO^;35^;data_ingestion.py^;download_housing_data()^;Downloading file from :[https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz] into :[C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\data_ingestion\2023-07-24-16-35-43\tgz_data\housing.tgz]
[2023-07-24 16:35:58,681]^;INFO^;37^;data_ingestion.py^;download_housing_data()^;File:[C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\data_ingestion\2023-07-24-16-35-43\tgz_data\housing.tgz] hass been downloaded successfully.
[2023-07-24 16:35:58,681]^;INFO^;50^;data_ingestion.py^;extract_tgz_file()^;Extracting tgz file: [C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\data_ingestion\2023-07-24-16-35-43\tgz_data\housing.tgz] into dir: [C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\data_ingestion\2023-07-24-16-35-43\raw_data]
[2023-07-24 16:35:58,717]^;INFO^;53^;data_ingestion.py^;extract_tgz_file()^;Extracting completed
[2023-07-24 16:35:58,717]^;INFO^;66^;data_ingestion.py^;split_data_as_train_test()^;Reading CSV file:[C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\data_ingestion\2023-07-24-16-35-43\raw_data\housing.csv]
[2023-07-24 16:35:58,760]^;INFO^;75^;data_ingestion.py^;split_data_as_train_test()^;Splitting data into traina and test
[2023-07-24 16:35:58,775]^;INFO^;90^;data_ingestion.py^;split_data_as_train_test()^;Exorting training dataset to file:[C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\data_ingestion\2023-07-24-16-35-43\ingested_data\train\housing.csv]
[2023-07-24 16:35:58,918]^;INFO^;94^;data_ingestion.py^;split_data_as_train_test()^;Exporting test dataset to file: [C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\data_ingestion\2023-07-24-16-35-43\ingested_data\test\housing.csv]
[2023-07-24 16:35:58,950]^;INFO^;102^;data_ingestion.py^;split_data_as_train_test()^;Data Ingestion Artifact:[DataIngestionArtifact(train_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_ingestion\\2023-07-24-16-35-43\\ingested_data\\train\\housing.csv', test_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_ingestion\\2023-07-24-16-35-43\\ingested_data\\test\\housing.csv', is_ingested=True, message='Data ingestion completed successfully.')]
[2023-07-24 16:35:58,950]^;INFO^;118^;data_ingestion.py^;__del__()^;====================Data Ingestion log completed.==================== 


[2023-07-24 16:35:58,950]^;INFO^;29^;data_validation.py^;is_train_test_file_exists()^;Checking if train and test file is exists
[2023-07-24 16:35:58,950]^;INFO^;40^;data_validation.py^;is_train_test_file_exists()^;Is train and test file exists?-> True
[2023-07-24 16:36:01,350]^;INFO^;114^;data_validation.py^;initiate_data_validation()^;Data Validation artifact: DataValidationArtifact(schema_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\config\\schema.yaml', report_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_validation\\2023-07-24-16-35-43\\report.json', report_page_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_validation\\2023-07-24-16-35-43\\report.html', is_validated=True, message='Data Validation perfomed sucessfully')
[2023-07-24 16:36:01,350]^;INFO^;139^;configuration.py^;get_data_transformation_config()^;Data transformation config: DataTransformationConfig(add_bedroom_per_room=True, transformed_train_dir='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_transformation\\2023-07-24-16-35-43\\transformed_data\\train', transformed_test_dir='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_transformation\\2023-07-24-16-35-43\\transformed_data\\test', preprocessed_object_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_transformation\\2023-07-24-16-35-43\\preprocessed\\preprocessed.pkl')
[2023-07-24 16:36:01,350]^;INFO^;96^;data_transformation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2023-07-24 16:36:01,350]^;INFO^;149^;data_transformation.py^;initiate_data_transformation()^;Obtaining preprocessing object.
[2023-07-24 16:36:01,355]^;INFO^;133^;data_transformation.py^;get_data_transformer_object()^;Categorical columns: ['ocean_proximity']
[2023-07-24 16:36:01,355]^;INFO^;134^;data_transformation.py^;get_data_transformer_object()^;Numerical columns: ['longitude', 'latitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income']
[2023-07-24 16:36:01,355]^;INFO^;153^;data_transformation.py^;initiate_data_transformation()^;Obtaining training and test file path.
[2023-07-24 16:36:01,355]^;INFO^;160^;data_transformation.py^;initiate_data_transformation()^;Loading training and test data as pandas dataframe.
[2023-07-24 16:36:01,390]^;INFO^;170^;data_transformation.py^;initiate_data_transformation()^;Splitting input and target feature from training and testing dataframe.
[2023-07-24 16:36:01,390]^;INFO^;178^;data_transformation.py^;initiate_data_transformation()^;Applying preprocessing object on training dataframe and testing dataframe
[2023-07-24 16:36:01,438]^;INFO^;196^;data_transformation.py^;initiate_data_transformation()^;Saving transformed training and testing array.
[2023-07-24 16:36:01,460]^;INFO^;203^;data_transformation.py^;initiate_data_transformation()^;Saving preprocessing object.
[2023-07-24 16:36:01,464]^;INFO^;213^;data_transformation.py^;initiate_data_transformation()^;Data transformationa artifact: DataTransformationArtifact(is_transformed=True, message='Data transformation successfull.', transformed_train_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_transformation\\2023-07-24-16-35-43\\transformed_data\\train\\housing.npz', transformed_test_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_transformation\\2023-07-24-16-35-43\\transformed_data\\test\\housing.npz', preprocessed_object_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\data_transformation\\2023-07-24-16-35-43\\preprocessed\\preprocessed.pkl')
[2023-07-24 16:36:01,466]^;INFO^;219^;data_transformation.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2023-07-24 16:36:01,466]^;INFO^;168^;configuration.py^;get_model_trainer_config()^;Model trainer config: ModelTrainerConfig(trained_model_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\model_trainer\\2023-07-24-16-35-43\\trained_model\\model.pkl', base_accuracy=0.6, model_config_file_path='config\\model.yaml')
[2023-07-24 16:36:01,466]^;INFO^;45^;model_trainer.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2023-07-24 16:36:01,466]^;INFO^;53^;model_trainer.py^;initiate_model_trainer()^;Loading transformed training dataset
[2023-07-24 16:36:01,477]^;INFO^;57^;model_trainer.py^;initiate_model_trainer()^;Loading transformed testing dataset
[2023-07-24 16:36:01,486]^;INFO^;61^;model_trainer.py^;initiate_model_trainer()^;Splitting training and testing input and target feature
[2023-07-24 16:36:01,486]^;INFO^;65^;model_trainer.py^;initiate_model_trainer()^;Extracting model config file path
[2023-07-24 16:36:01,486]^;INFO^;68^;model_trainer.py^;initiate_model_trainer()^;Initializing model factory class using above model config file: config\model.yaml
[2023-07-24 16:36:01,486]^;INFO^;73^;model_trainer.py^;initiate_model_trainer()^;Expected accuracy: 0.6
[2023-07-24 16:36:01,493]^;INFO^;75^;model_trainer.py^;initiate_model_trainer()^;Initiating operation model selecttion
[2023-07-24 16:36:01,493]^;INFO^;343^;model_factory.py^;get_best_model()^;Started Initializing model from config file
[2023-07-24 16:36:01,493]^;INFO^;188^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.linear_model' from 'C:\\Users\\cscrs\\anaconda3\\lib\\site-packages\\sklearn\\linear_model\\__init__.py'> import LinearRegression
[2023-07-24 16:36:01,495]^;INFO^;167^;model_factory.py^;update_property_of_class()^;Executing:$ LinearRegression().fit_intercept=True
[2023-07-24 16:36:01,552]^;INFO^;188^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.ensemble' from 'C:\\Users\\cscrs\\anaconda3\\lib\\site-packages\\sklearn\\ensemble\\__init__.py'> import RandomForestRegressor
[2023-07-24 16:36:01,552]^;INFO^;167^;model_factory.py^;update_property_of_class()^;Executing:$ RandomForestRegressor().min_samples_leaf=3
[2023-07-24 16:36:01,552]^;INFO^;345^;model_factory.py^;get_best_model()^;Initialized model: [InitalizedModelDetail(model_serial_number='module_0', model=LinearRegression(), param_grid_search={'fit_intercept': [True, False]}, model_name='sklearn.linear_model.LinearRegression'), InitalizedModelDetail(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), param_grid_search={'min_samples_leaf': [6]}, model_name='sklearn.ensemble.RandomForestRegressor')]
[2023-07-24 16:36:01,552]^;INFO^;188^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from 'C:\\Users\\cscrs\\anaconda3\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
[2023-07-24 16:36:01,552]^;INFO^;167^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).cv=5
[2023-07-24 16:36:01,552]^;INFO^;167^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).verbose=2
[2023-07-24 16:36:01,552]^;INFO^;221^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training LinearRegression Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:36:01,700]^;INFO^;188^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from 'C:\\Users\\cscrs\\anaconda3\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
[2023-07-24 16:36:01,700]^;INFO^;167^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).cv=5
[2023-07-24 16:36:01,700]^;INFO^;167^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).verbose=2
[2023-07-24 16:36:01,700]^;INFO^;221^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:37:23,895]^;INFO^;330^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Acceptable model found:GridSearchedBestModel(model_serial_number='module_0', model=LinearRegression(), best_model=LinearRegression(fit_intercept=False), best_parameters={'fit_intercept': False}, best_score=0.6425567028055793)
[2023-07-24 16:37:23,895]^;INFO^;330^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Acceptable model found:GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8039799785686605)
[2023-07-24 16:37:23,895]^;INFO^;336^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Best model: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8039799785686605)
[2023-07-24 16:37:23,895]^;INFO^;78^;model_trainer.py^;initiate_model_trainer()^;Best model found on training dataset: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8039799785686605)
[2023-07-24 16:37:23,895]^;INFO^;80^;model_trainer.py^;initiate_model_trainer()^;Extracting trained model list.
[2023-07-24 16:37:23,895]^;INFO^;84^;model_trainer.py^;initiate_model_trainer()^;Evaluation all trained model on training and testing dataset both
[2023-07-24 16:37:23,895]^;INFO^;57^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [LinearRegression] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:37:23,895]^;INFO^;76^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:37:23,895]^;INFO^;77^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2023-07-24 16:37:23,895]^;INFO^;78^;model_factory.py^;evaluate_regression_model()^;0.6481553634454353		 0.6564599764795922		0.6522812381877459
[2023-07-24 16:37:23,895]^;INFO^;80^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:37:23,895]^;INFO^;81^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [0.00830461303415686].
[2023-07-24 16:37:23,895]^;INFO^;82^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [68627.87390018745].
[2023-07-24 16:37:23,895]^;INFO^;83^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [66913.44191320929].
[2023-07-24 16:37:23,895]^;INFO^;99^;model_factory.py^;evaluate_regression_model()^;Acceptable model found MetricInfoArtifact(model_name='LinearRegression(fit_intercept=False)', model_object=LinearRegression(fit_intercept=False), train_rmse=68627.87390018745, test_rmse=66913.44191320929, train_accuracy=0.6481553634454353, test_accuracy=0.6564599764795922, model_accuracy=0.6522812381877459, index_number=0). 
[2023-07-24 16:37:23,895]^;INFO^;57^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [RandomForestRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:37:24,203]^;INFO^;76^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:37:24,203]^;INFO^;77^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2023-07-24 16:37:24,203]^;INFO^;78^;model_factory.py^;evaluate_regression_model()^;0.904324796413122		 0.8182078977000236		0.8591136679610447
[2023-07-24 16:37:24,203]^;INFO^;80^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2023-07-24 16:37:24,203]^;INFO^;81^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [0.08611689871309847].
[2023-07-24 16:37:24,203]^;INFO^;82^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [35786.95725413699].
[2023-07-24 16:37:24,203]^;INFO^;83^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [48675.699945108056].
[2023-07-24 16:37:24,203]^;INFO^;87^;model_trainer.py^;initiate_model_trainer()^;Best found model on both training and testing dataset.
[2023-07-24 16:37:24,219]^;INFO^;95^;model_trainer.py^;initiate_model_trainer()^;Saving model at path: C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\housing\artifact\model_trainer\2023-07-24-16-35-43\trained_model\model.pkl
[2023-07-24 16:37:24,219]^;INFO^;109^;model_trainer.py^;initiate_model_trainer()^;Model Trainer Artifact: ModelTrainerArtifact(is_trained=True, message='Model Trained successfully', trained_model_file_path='C:\\Users\\cscrs\\OneDrive\\Documents\\Machine Learning\\Machine-Learning-Project\\housing\\artifact\\model_trainer\\2023-07-24-16-35-43\\trained_model\\model.pkl', train_rmse=68627.87390018745, test_rmse=66913.44191320929, train_accuracy=0.6481553634454353, test_accuracy=0.6564599764795922, model_accuracy=0.6522812381877459)
[2023-07-24 16:37:24,219]^;INFO^;115^;model_trainer.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2023-07-24 16:37:24,219]^;INFO^;24^;model_evaluation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Evaluation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2023-07-24 16:37:24,284]^;INFO^;106^;model_evaluation.py^;initiate_model_evaluation()^;Converting target column into numpy array.
[2023-07-24 16:37:24,284]^;INFO^;109^;model_evaluation.py^;initiate_model_evaluation()^;Conversion completed target column into numpy array.
[2023-07-24 16:37:24,284]^;INFO^;112^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target column from the dataframe.
[2023-07-24 16:37:24,284]^;INFO^;115^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target column from the dataframe completed.
[2023-07-24 16:37:24,284]^;ERROR^;18^;demo.py^;main()^;
        Error occured in script: 
        [ C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\Housing\pipeline\pipeline.py ] at 
        try block line number: [131] and exception block line number: [150] 
        error message: [
        Error occured in script: 
        [ C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\Housing\pipeline\pipeline.py ] at 
        try block line number: [90] and exception block line number: [93] 
        error message: [
        Error occured in script: 
        [ C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\Housing\component\model_evaluation.py ] at 
        try block line number: [117] and exception block line number: [157] 
        error message: [
        Error occured in script: 
        [ C:\Users\cscrs\OneDrive\Documents\Machine Learning\Machine-Learning-Project\Housing\component\model_evaluation.py ] at 
        try block line number: [35] and exception block line number: [51] 
        error message: ['NoneType' object has no attribute 'model_evaluation_file_path']
        ]
        ]
        ]
        
[2023-07-24 16:37:24,290]^;INFO^;160^;model_evaluation.py^;__del__()^;====================Model Evaluation log completed.==================== 
